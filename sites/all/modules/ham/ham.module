<?php

require_once("arrl_band_plan.inc");
require_once("amateur_radio.inc");

function ham_perm() {
  return array('access ham content', 'access ham administration pages');
}

function ham_generation($exe_time = NULL) {
  if ($exe_time != NULL) {
    return "Module Execution Time: {$exe_time} seconds. Generated by <a href=\"http://drupal.org/project/ham\">Drupal Ham Radio Module</a>...";
  }
  else {
    return "Generated by <a href=\"http://drupal.org/project/ham\">Drupal Ham Radio Module</a>...";
  }
}

function ham_main() {
  
  $start = microtime(true);

  $content = '';
  
  $content .=  '<p>'; 

  $result = db_query("SELECT COUNT(*) as qso_count FROM ham_qso");

  $total_count = db_fetch_object($result)->qso_count;
  $content .= '<li><a href="/ham/logbook">' . t('View Complete Logbook') . '</a> (' . $total_count . ' entries)</li>';

  $content .=  '<li>QSO by Date</li><ul>';

  $result = db_query("SELECT YEAR(qso_time) as qso_year, COUNT(*) as qso_count FROM ham_qso GROUP BY qso_year ORDER BY qso_year DESC");

  while ($row = db_fetch_object($result)) {
    $content .= '<li><a href="/ham/date/' . $row->qso_year . '">' . $row->qso_year . '</a> - ';
    
    $result_m = db_query("SELECT MONTH(qso_time) as qso_month, COUNT(*) as qso_count FROM ham_qso WHERE YEAR(qso_time) = " . $row->qso_year . " GROUP BY qso_month ORDER BY qso_month ASC");
    while ($row_m = db_fetch_object($result_m)) {
      $content .= '<a href="/ham/date/' . $row->qso_year . '/' . $row_m->qso_month . '">' . date("M", mktime(0, 0, 0, $row_m->qso_month, 1, 2001)) . '</a> ';
    }
    
    $content .=  '</li>';
  }
  
  $content .=  '</ul>';

  $content .=  '</p>'; 
  
  $content .=  '<br><h3>Mode Statistics:</h3>';

  $result = db_query("SELECT *, COUNT(*) as qso_count FROM ham_qso GROUP BY qso_mode ORDER BY qso_count DESC");

  $header = array( array('data' => 'Mode'), array('data' => 'QSO Count', 'sort' => 'desc'), array('data' => '%'));

  while ($row = db_fetch_object($result)) {
    $rows[] = array(array('data' => $row->qso_mode), array('data' => $row->qso_count),  array('data' => number_format(($row->qso_count/$total_count)*100,2)));
  }

  $content .= theme_table($header, $rows);

  $rows = NULL;
  
  $content .=  '<br><h3>Band Statistics:</h3>';

  $result = db_query("SELECT *, COUNT(*) as qso_count FROM ham_qso GROUP BY qso_band ORDER BY qso_count DESC");

  $header = array( array('data' => 'Band'), array('data' => 'QSO Count', 'sort' => 'desc'), array('data' => '%'));

  while ($row = db_fetch_object($result)) {
    $rows[] = array(array('data' => $row->qso_band), array('data' => $row->qso_count),  array('data' => number_format(($row->qso_count/$total_count)*100,2)));
  }

  $content .= theme_table($header, $rows);

  $rows = NULL;

  $content .=  '<br><h3>Top 10 DX Contacts:</h3>'; 
  
  $result = db_query("SELECT *, COUNT(*) as qso_count FROM ham_qso LEFT JOIN ham_dxcc ON qso_dxcc = dxcc_code WHERE qso_dxcc <> 291 AND qso_dxcc <> 1 AND qso_dxcc <> 110 AND qso_dxcc <> 6 GROUP BY qso_call ORDER BY qso_count DESC LIMIT 0,10");
  
  $header = array( array('data' => 'Call'), array('data' => 'QSO Count', 'sort' => 'desc'), array('data' => 'Country'));
  
  while ($row = db_fetch_object($result)) {
    $call_with_link = "<a href=\"/ham/callsign/{$row->qso_call}\">{$row->qso_call}</a>";
    $rows[] = array(array('data' => $call_with_link), array('data' => $row->qso_count), array('data' => $row->dxcc_country));
  }

  $content .= theme_table($header, $rows);
 
  $content .=  '<br><h3>Country Statistics:</h3>'; 
  
  $result = db_query("SELECT *, COUNT(*) as qso_count FROM ham_qso LEFT JOIN ham_dxcc ON qso_dxcc = dxcc_code GROUP BY qso_dxcc ORDER BY qso_count DESC, dxcc_country ASC LIMIT 0,1000");
  
  $header_country = array( array('data' => 'Country'), array('data' => 'QSO Count', 'sort' => 'desc'));
  
  $count = 0;
  
  while ($row = db_fetch_object($result)) {
    $rows_country[] = array(array('data' => '<a href="/ham/country/' . $row->dxcc_code . '/">' . $row->dxcc_country . '</a>'), array('data' => $row->qso_count));
    $count++;
  }

  $content .= theme_table($header_country, $rows_country);
  
  $exe_time = number_format(microtime(true) - $start,9);
  
  $content .= "Total Countries Contacted: {$count}<br><br>";

  $content .= ham_generation($exe_time);

  date_default_timezone_set($default_tz);
  
  return $content;

}

function ham_logbook() {
  
  $start = microtime(true);

  $content = '';
  
  // limit set at 10,000 entries, will remove limit after further testing
  $result = db_query('SELECT * FROM ham_qso LEFT JOIN ham_dxcc ON qso_dxcc = dxcc_code ORDER BY qso_time DESC LIMIT 0,10000 ');
  
  $default_tz = date_default_timezone_get();
  date_default_timezone_set('UTC');
  
  $header = array( array('data' => 'Date'), array('data' => 'Call'), array('data' => 'Grid'),array('data' => 'Country'), array('data' => 'Mode'), array('data' => 'Band'),  array('data' => 'Frequency'));
  
  $count = 0;
  
  while ($row = db_fetch_object($result)) {
    if (ctype_alnum($row->qso_call)) {
      $call_with_link = "<a href=\"/ham/callsign/{$row->qso_call}\">{$row->qso_call}</a>";
    }
    else {
      $parts = explode("/", $row->qso_call);
      if (ctype_digit($parts[1]) || strtolower($parts[1]) == 'qrp' || strtolower($parts[1]) == 'mm') {
        $call_with_link = "<a href=\"/ham/callsign/{$parts[0]}\">{$row->qso_call}</a>";
      }
      else {
        $call_with_link = $row->qso_call;
      }
    }

    $rows[] = array(array('data' => date('d M y Hi', strtotime($row->qso_time)). "z") , array('data' => $call_with_link), array('data' => $row->qso_remote_grid), array('data' => $row->dxcc_country), array('data' => $row->qso_mode), array('data' => $row->qso_band), array('data' => number_format($row->qso_freq,6)));
    $count++;
  }

  $content .= theme_table($header, $rows);
  
  $exe_time = number_format(microtime(true) - $start,9);
  
  $content .= "Records Displayed: {$count}. " . ham_generation($exe_time);
  
  date_default_timezone_set($default_tz);
  
  return $content;

}

function ham_callsign($query = NULL) {

  $start = microtime(true);

  $content = '';

  $content .= '<p>'. t('Contact with ') . "<a href=\"http://www.qrz.com/callsign/" . strtoupper($query) . "\">" . strtoupper($query) . '</a>:</p>';
  
  $result = db_query("SELECT * FROM ham_qso LEFT JOIN ham_dxcc ON qso_dxcc = dxcc_code WHERE qso_call LIKE '$query%' ORDER BY qso_time DESC");
  
  $default_tz = date_default_timezone_get();
  date_default_timezone_set('UTC');
  
  $header = array( array('data' => 'Date', 'sort' => 'desc'), array('data' => 'Call'), array('data' => 'Grid'),array('data' => 'Country'), array('data' => 'Mode'), array('data' => 'Band'), array('data' => 'Frequency'));
  
  $count = 0;
  
  while ($row = db_fetch_object($result)) {
    $call_with_link = "<a href=\"/ham/callsign/{$row->qso_call}\">{$row->qso_call}</a>";
    
    if ($row->qso_remote_grid) {
      $grid_link = '<a href="http://maps.google.com/?ie=UTF8&ll=' . number_format(loc2lat($row->qso_remote_grid),3) . ',' . number_format(loc2lon($row->qso_remote_grid),3) . '&spn=13.915107,34.628906&z=12&om=1">' . $row->qso_remote_grid . '</a>';
    }
    else {
      $grid_link = "";
    }
    
    $rows[] = array(array('data' => date('d M y Hi', strtotime($row->qso_time)). "z") , array('data' => $call_with_link), array('data' => $grid_link), array('data' => $row->dxcc_country), array('data' => $row->qso_mode), array('data' => $row->qso_band), array('data' => number_format($row->qso_freq,6)));
    $count++;
  }

  $content .= theme_table($header, $rows);
  
  $exe_time = number_format(microtime(true) - $start,9);
  
  $content .= "Records Displayed: {$count}. " . ham_generation($exe_time);
   
  date_default_timezone_set($default_tz);
  
  return $content;

}

function ham_country($query = NULL) {

  $start = microtime(true);

  $content = '';
  
  $result = db_query("SELECT * FROM ham_qso WHERE qso_dxcc = $query ORDER BY qso_time DESC");
  
  $default_tz = date_default_timezone_get();
  date_default_timezone_set('UTC');
  
  $header = array( array('data' => 'Date', 'sort' => 'desc'), array('data' => 'Call'), array('data' => 'Grid'), array('data' => 'Mode'), array('data' => 'Band'), array('data' => 'Frequency'));
  
  $count = 0;
  
  while ($row = db_fetch_object($result)) {
    $call_with_link = "<a href=\"/ham/callsign/{$row->qso_call}\">{$row->qso_call}</a>";
    if ($row->qso_remote_grid) {
     $grid_link = '<a href="http://maps.google.com/?ie=UTF8&ll=' . number_format(loc2lat($row->qso_remote_grid),3) . ',' . number_format(loc2lon($row->qso_remote_grid),3) . '&spn=13.915107,34.628906&z=12&om=1">' . $row->qso_remote_grid . '</a>';
    }
    else {
      $grid_link = "";
    }
    $rows[] = array(array('data' => date('d M y Hi', strtotime($row->qso_time)). "z") , array('data' => $call_with_link), array('data' => $grid_link), array('data' => $row->qso_mode), array('data' => $row->qso_band), array('data' => number_format($row->qso_freq,6)));
    $count++;
  }

  $content .= theme_table($header, $rows);
  
  $exe_time = number_format(microtime(true) - $start,9);
  
  $content .= "Records Displayed: {$count}. " . ham_generation($exe_time);
  
  date_default_timezone_set($default_tz);
  
  return $content;

}

function ham_date($year, $month = NULL) {

  $start = microtime(true);
  
  $default_tz = date_default_timezone_get();
  date_default_timezone_set('UTC');

  $content = '';
  
  if($month == NULL) {
    $result = db_query("SELECT * FROM ham_qso LEFT JOIN ham_dxcc ON qso_dxcc = dxcc_code WHERE YEAR(qso_time) = " . $year . " ORDER BY qso_time DESC");
    $content .= '<p>Contact during ' . $year . '</p>';
  }
  else
  {
    $result = db_query("SELECT * FROM ham_qso LEFT JOIN ham_dxcc ON qso_dxcc = dxcc_code WHERE YEAR(qso_time) = " . $year . " AND MONTH(qso_time) = " . $month . " ORDER BY qso_time DESC");
    $content .= '<p>Contact during ' . date("M", mktime(0, 0, 0, $month, 1, 2001)) . ' ' . $year . '</p>';
  }

  $header = array( array('data' => 'Date', 'sort' => 'desc'), array('data' => 'Call'), array('data' => 'Grid'),array('data' => 'Country'), array('data' => 'Mode'), array('data' => 'Band'), array('data' => 'Frequency'));

  $count = 0;

  while ($row = db_fetch_object($result)) {
    $call_with_link = "<a href=\"/ham/callsign/{$row->qso_call}\">{$row->qso_call}</a>";

    if ($row->qso_remote_grid) {
                $grid_link = '<a href="http://maps.google.com/?ie=UTF8&ll=' .
                  number_format(loc2lat($row->qso_remote_grid),3) . ',' . number_format(loc2lon($row->qso_remote_grid),3) .
                  '&spn=13.915107,34.628906&z=12&om=1">' . $row->qso_remote_grid . '</a>';
        }
        else {
          $grid_link = "";
        }


    $rows[] = array(array('data' => date('d M y Hi', strtotime($row->qso_time)). "z") , array('data' => $call_with_link), array('data' => $grid_link), array('data' => $row->dxcc_country), array('data' => $row->qso_mode), array('data' => $row->qso_band), array('data' => number_format($row->qso_freq,6)));
    $count++;
  }

  $content .= theme_table($header, $rows);

  $exe_time = number_format(microtime(true) - $start,9);

  $content .= "Records Displayed: {$count}. " . ham_generation($exe_time);

  date_default_timezone_set($default_tz);

  return $content;

}

function ham_admin() {

  $myHam = new ham();
  
  $form = array();
  
  $form['general'] = array(
    '#type' => 'fieldset',
    '#title' => t('General'),
  );
  
  $form['general']['ham_mycallsign'] = array(
    '#type' => 'textfield',
    '#title' => t('Ham Station ID'),
    '#default_value' => variable_get('ham_mycallsign', 'ABC123'),
    '#size' => 12,
    '#maxlength' => 12,
    '#description' => t("Your Ham Callsign."),
    '#required' => TRUE,
  );

  for ($i = 0; $i < 6; $i++) {
    $lic_array[$i] = $myHam->get_license_type_name($i);
  }

  $form['general']['license_type'] = array(
    '#type' => 'select',
    '#title' => t('FCC License Class'),
    '#description' => t("Only applicable to who want to check logs for out of band transmissions."),
    '#options' => $lic_array,
   );
  
  $cols_array['datetime'] = "UTC Date & Time";
  $cols_array['hiscall'] = "His Call";
  $cols_array['hisgrid'] = "His Grid";
  $cols_array['mygrid'] = "My Grid";
  $cols_array['country'] = "His Country";
  $cols_array['mode'] = "Mode";
  $cols_array['band'] = "Band";
  $cols_array['freq'] = "Frequency";

  $form['general']['display_col'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Columns to display on logbook page'),
    '#description' => t("Selected Fields will be displayed."),
    '#options' => $cols_array,
   );
  
  $form['import'] = array(
    '#type' => 'fieldset',
    '#title' => t('Import Logbook'),
    '#description' => t('Import QSO log from ADIF logbook file. <em>Warning: Line breaks or special characters may cause parsing errors.</em>'),
  );
  
  $form['import']['upload'] = array(
    '#type' => 'file',
    '#title' => t('Attach ADIF file'),
    '#size' => 40,
  );
    $form['import']['import'] = array(
    '#type' => 'submit',
    '#value' => t('Import Log'),
    '#submit' => array('ham_import_submit'),
  );
  $form['#attributes'] = array('enctype' => "multipart/form-data");

  
    $form['purge_log'] = array(
    '#type' => 'fieldset',
    '#title' => t('Purge Ham Radio Log'),
    '#description' => t('Clear the logbook database table. <em>Warning: Only use this if you have updated your local logbook and wish import it again.</em>'),
  );

  $form['purge_log']['clear'] = array(
    '#type' => 'submit',
    '#value' => t('Purge All Log Entries'),
    '#submit' => array('ham_purge_submit'),
  );
  
  return system_settings_form($form);
}

function ham_purge_submit(&$form_state, $form) {
  $result = db_query("TRUNCATE TABLE `ham_qso`");
  drupal_set_message(t('Logbook purged.'));
}

function ham_import_submit(&$form_state, $form) {
  
  if ($file = file_save_upload('upload')) {
    $filename = $file->filepath;
    adif_import($filename);
    file_delete($filename);
    drupal_set_message(t('Logbook imported.'));
  }
  else {
   drupal_set_message(t('Import failed.'));
  }
  ham_generate_statistics();
}

function ham_generate_statistics() {
  drupal_set_message(t('Summary Statistics Generated.'));
  return;
}

function ham_menu() {

  $items = array();
   
  $items['admin/settings/ham'] = array(
    'title' => 'Drupal Ham Radio Module Settings',
    'description' => 'Station Information',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ham_admin'),
    'access arguments' => array('access ham administration pages'),
    'type' => MENU_NORMAL_ITEM,
   );
   
  $items['ham'] = array(
    'title' => 'Drupal Ham Radio Module',
    'page callback' => 'ham_main',
    'access arguments' => array('access ham content'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['ham/logbook'] = array(
    'title' => 'Logbook',
    'page callback' => 'ham_logbook',
    'access arguments' => array('access ham content'),
    'type' => MENU_NORMAL_ITEM,
  );

  
  $items['ham/callsign/%'] = array(
    'title' => 'Contact Detail',
    'page callback' => 'ham_callsign',
    'page arguments' => array(2),
    'access arguments' => array('access ham content'),
    'type' => MENU_CALLBACK,
  );
  
  $items['ham/country/%'] = array(
    'title' => 'Country Detail',
    'page callback' => 'ham_country',
    'page arguments' => array(2),
    'access arguments' => array('access ham content'),
    'type' => MENU_CALLBACK,
  );

  $items['ham/date/%/%'] = array(
    'title' => 'QSO by Date',
    'page callback' => 'ham_date',
    'page arguments' => array(2,3),
    'access arguments' => array('access ham content'),
    'type' => MENU_CALLBACK,
  );

  $items['ham/date/%'] = array(
    'title' => 'QSO by Date',
    'page callback' => 'ham_date',
    'page arguments' => array(2),
    'access arguments' => array('access ham content'),
    'type' => MENU_CALLBACK,
  );
  
  return $items;
}
